"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# apps配下にフォルダをアプリフォルダを配置できるようにする
import sys

# 多言語化の絞り込み
from django.utils.translation import ugettext_lazy as _

# メッセージのclassを定義する(サーバサイドからフロントへのメッセージ)
from django.contrib.messages import constants as message_constants

# 時刻取得
from datetime import datetime, timedelta



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ea(64r0lnh5i@0e*z31#c*frejt#bop0-_gx*-*&ilj257pomi'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'webpack_loader',
    'training',
    'django.forms', #Formでチェックボックスをカスタムする際に必要]
    'widget_tweaks', # formカスタマイズ用
    'import_export',
    # 'rest_framework', # 追加
    'bootstrap_datepicker_plus',
    # 'crispy_forms', # カスタムフォームのレンダリング用
]

# CRISPY_TEMPLATE_PACK = 'bootstrap4'

# 追加
# REST_FRAMEWORK = {
#     'DEFAULT_RENDERER_CLASSES': [
#         'rest_framework.renderers.JSONRenderer',
#     ]
# }

# REST_FRAMEWORK = {
#     'DATETIME_FORMAT': "%Y/%m/%d %H:%M",
#     'DATE_INPUT_FORMATS':"%Y-%m-%dT%H:%M:%S.%fZ"
# }

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

#LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'ja'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATIC_URL = '/static/'

# アプリケーションディレクトリをプロジェクト直下のappsフォルダにまとめる
sys.path.append(os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0,BASE_DIR)


# Gメールで送信する例
EMAIL_HOST = 'smtp.gmail.com' # SMTPサーバー情報
EMAIL_PORT = 587 #メールサーバーで指定されているポート　※GmailのSMTPサーバーのポート番号は587
EMAIL_HOST_USER = 'ryookinawa@gmail.com' # デフォルトのEmailアドレス
# EMAIL_HOST_USER = 'rika.okusu@yui.okinawa' # デフォルトのEmailアドレス
EMAIL_HOST_PASSWORD = 'jqwmookzxurideve' # メールサーバーのパスワード
EMAIL_USE_TLS = True #メールサーバーで確認（TSLの場合もある）
EMAIL_FROM_ADDRESS = 'admin@hoge.com' # 任意のメールアドレス


# 認証先テーブル
AUTH_USER_MODEL = 'accounts.User'


# ログイン画面
LOGIN_URL = 'accounts:login'
LOGIN_REDIRECT_URL = 'training:training'
LOGOUT_REDIRECT_URL = 'accounts:login'


# WebPackを読むための設定
WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': '',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
    }
}


# FORMでチェックボックスをカスタマイズする場合に追加
FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'


# メッセージをサーバサイドからフロントへ送信する際の保存先？
MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'
MESSAGE_TAGS = {
    message_constants.SUCCESS: 'alert alert-success',
    message_constants.ERROR: 'alert alert-danger',
}


# DATA_UPLOAD_MAX_MEMORY_SIZE = 10*1024*1024


# 自動ログアウト(クッキーのタイムアウトを設定)
SESSION_COOKIE_AGE = 7200 #秒
# 操作しない場合にタイムアウトになる時間
SESSION_EXPIRE_SECONDS = 7200 #秒
# 最後のアクティビティーからSESSION_EXPIRE_SECONDS後にタイムアウトする
SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True


# サービス管理者を識別するためのサービス名一覧
# TRAINING = "Online学習支援システム"
TRAINING = "まなもあ"

# リソース管理テーブル用、トレーニングのサイズ 1トレーニング=20KB(=20480B)
TRAINING_SIZE = 20480

# リソース管理テーブル用、デフォルトで設定しているポスターのサイズ
DEFAULT_POSTER = 377487

# リソース管理テーブル用、デフォルトで設定しているコースのポスターのサイズ
DEFAULT_SUBJECT_POSTER = 3187

X_FRAME_OPTIONS = 'ALLOWALL'

XS_SHARING_ALLOWED_METHODS = ['POST','GET','OPTIONS', 'PUT', 'DELETE']

# 科目のデフォルトで設定しているイメージ名
DEFAULT_SUBJECT_IMAGE = "default_subject_image"

# 科目のデフォルトで設定しているデフォルト名
SUBJECT_NAME = "デフォルト"


